use NJK::Type;

use Test;

my @types = <any boolean number string array object>;

for @types -> $name {
  my $type = NJK::Type.new: $name;
  isa-ok $type, NJK::Type;
  isa-ok $type.single-types.head, NJK::Type::Single;;
  is $type.single-types.head.name, $name, "type: $name";
}

my @ok = [
  [<any                                any>],
  [<boolean                            any>],
  [<number                             any>],
  [<string                             any>],
  [<array                              any>],
  [<object                             any>],
  ["enum(bla)",                       "any"],
  ["enum(bla, ble, bli)",             "any"],
  ["enum(bla)",                       "string"],
  ["enum(bla, ble, bli)",             "string"],
  ["function()",                      "any"],
  ["function()",                      "string"],
  ["function():string",               "any"],
  ["function():string",               "string"],
  ["function():number",               "any"],
  ["function():number",               "number"],
  ["function(string)",                "any"],
  ["function(string)",                "string"],
  ["function(string):string",         "any"],
  ["function(string):string",         "string"],
  ["function(string):number",         "any"],
  ["function(string):number",         "number"],
  ["function(string, number)",        "any"],
  ["function(string, number)",        "string"],
  ["function(string, number):string", "any"],
  ["function(string, number):string", "string"],
  ["function(string, number):number", "any"],
  ["function(string, number):number", "number"],

  [<boolean                boolean|number|string|array|object>],
  [<number                 boolean|number|string|array|object>],
  [<string                 boolean|number|string|array|object>],
  [<array                  boolean|number|string|array|object>],
  [<object                 boolean|number|string|array|object>],
  ["enum(bla)",           "boolean|number|string|array|object"],
  ["enum(bla, ble, bli)", "boolean|number|string|array|object"],
  ["function()",          "boolean|number|string|array|object"],
];

my @nok = [
  [<any boolean>],
  [<any number>],
  [<any string >],
  [<any array  >],
  [<any object >],
  ["any", "enum(bla)"],
  ["any", "enum(bla, ble, bli)"],
  ["any", "function()"],
];

for @ok -> [Str $tested, Str $comparison] {
  diag "$tested.gist() ~~ $comparison.gist()";
  ok NJK::Type.new($tested) ~~ NJK::Type.new($comparison), "$tested ~~ $comparison";
}

for @nok -> [Str $tested, Str $comparison] {
  diag "$tested.gist() !~~ $comparison.gist()";
  nok NJK::Type.new($tested) ~~ NJK::Type.new($comparison), "$tested ~~ $comparison";
}

done-testing
